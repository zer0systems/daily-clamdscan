
#!/bin/bash

# Daily ClamAV system scan (daily-clamdscan) v1.07

# Script variable definitions
clamav_ver=$( clamd --version );
scan_dir="/";

# Determine the scan size
for s in ${scan_dir}; do
  dirsize=$(du -sh "$s" 2>/dev/null | cut -f1);
done

email_subject="ClamAV: Infections and/or Errors Encountered";
email_message="Version: "$clamav_ver"\nStarting a recursive scan of the "$s" directory. The size of the directory is: "$dirsize".\n\nInfections and/or errors have been encountered during the scan. Please review the log attached below for further details:\n";
monitoring_email="monitoring@zer0systems.com";
logfile="/var/log/clamav/clamdscan-$(date +'%Y-%m-%d').log";
log_rotate="+30";

# Execute the scan and quarantine any infections
# Additional parameters:
# 1. --multiscan enables clamd to utilize multithreading, allowing parallel processing
# 2. --allmatch clamd to continue scanning within a file even after a threat has been detected
# 3. --fdpass passes the file descriptor permissions to clamd to avoid perrions errors during scanning
# 4. --move simply moves any infected file(s) to the designated quarantine folder
# 5. --log specifies the path to the log file
# 6. > /dev/null is used to dismiss any output to supress the run-parts report
/usr/bin/clamdscan --multiscan --allmatch --fdpass --move=/root/.quarantine --log="$logfile" "$scan_dir" > /dev/null;

# Capture the scan return code
retcode="$?";

# Log rotation (days)
find /var/log/clamav -type f -mtime "$log_rotate" -delete;

# Evaluate the return code status, alert or terminate
if [ "$retcode" -ne "0" ]; then
  # Send an alert enail, including a log attachment detailing the issue(s)
  echo -e "$email_message" | s-nail -s "$email_subject" -a "$logfile" "$monitoring_email";
  exit "$retcode"
else
  exit 0
fi
